data Int = I IntB |
data Unit = Unit |


square = \ (n Boxed) -> 
  case n of
    I v -> let isbase = I (#lt v 2) in
      case isbase of
         I 1 -> let res = I 1 in res
         I z -> let n_div_2 = I (#div n 2) in
                  let sq_root = square n_div_2 in
                  let res = I (#mul sq_root sq_root) in
                  case #mod n 2 in of
                     0 -> res
                     1 -> let result = I(#mul res 4) in result;;

main_ = let x = square 10 in 
        case x of
          I v -> #print_int x;
